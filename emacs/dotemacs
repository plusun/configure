;;Color Theme
;(add-to-list 'load-path "/home/plusun/elisp/color-theme-6.6.0")
;(require 'color-theme)
;(eval-after-load "color-theme"
;  '(progn
;     (color-theme-initialize)
;     (color-theme-hober)))
;; goto line
(global-set-key (kbd "C-x g") 'goto-line)
;;换行自动缩进
(global-set-key (kbd "RET") 'newline-and-indent)
;;将文件重载revert-buffer函数设置为快捷键
(global-set-key (kbd "C-x r RET") 'revert-buffer)
;;将shell命令绑定到热键
(global-set-key (kbd "C-x t") 'shell)
;;C++语言编辑策略
(defun my-c-mode-common-hook()
  ;;hungry-delete
  (c-toggle-hungry-state 1)
  ;;编译设定
  (set (make-local-variable 'compile-command)
       (concat "make" ))
  ;;设置全部格式化的快捷键
  (defun indent-whole()
    (interactive)
    "Indent whole buffer"
    (indent-region (point-min) (point-max))
    (message "Format whole successfully!"))
  (define-key c-mode-base-map [(f5)] 'indent-whole)
  
  (define-key c-mode-base-map [(control \`)] 'hs-toggle-hiding)
					;(define-key c-mode-base-map [(return)] 'newline-and-indent)
  (define-key c-mode-base-map [(f7)] 'compile)
  (define-key c-mode-base-map [(f8)] 'gdb)
  (define-key c-mode-base-map [(meta \`)] 'c-indent-command)
  ;;预处理设置
					;(setq c-macro-shrink-window-flag t)
  (setq c-macro-preprocessor "cpp"))
(add-hook 'c-mode-common-hook 'my-c-mode-common-hook)
;; set *.h as cpp's header
(setq auto-mode-alist
      (cons '("\\.h$" . c++-mode)
	    auto-mode-alist))
;;加入文件
;(add-to-list 'load-path "~/elisp")

;; ;;php-mode
;; (load "~/elisp/php-mode.el")
;; (require 'php-mode)
;; (add-hook 'php-mode-user-hook 'turn-on-font-lock)
;; (setq tab-width 2)
;; ;;multi-web-mode
;; (load "~/elisp/multi-web-mode.el")
;; (require 'multi-web-mode)
;; (setq mweb-default-major-mode 'html-mode)
;; (setq mweb-tags '((php-mode "<\\?php\\|<\\? \\|<\\?=" "\\?>")
;; 		  (js-mode "<script[^>]*>" "</script>")
;; 		  (css-mode "<style +type=\"text/css\"[^>]*>" "</style>")))
;; (setq mweb-filename-extensions '("php" "htm" "html" "ctp" "phtml" "php4" "php5"))
;; (multi-web-global-mode 1)

;; LaTeX设置
;(load "auctex.el" nil t t)
;(load "preview-latex.el" nil t t)
;(setq TeX-auto-save t)
;(setq TeX-parse-self t)
;(setq-default TeX-master nil)
;(setq TeX-PDF-mode t)
;(setq TeX-newline-function 'newline-and-indent)

;; set scratch as startup
(setq initial-scratch-message "")
(setq inhibit-startup-message t)

;; settings for gnuplot
;(load "/usr/share/emacs/site-lisp/dotemacs" nil t t)

;; colored terminal
(add-hook 'shell-mode-hook 'ansi-color-for-comint-mode-on)

;; mmm mode
;(require 'mmm-mode)
;(add-hook 'mmm-mode-user-hook 'turn-on-font-lock)

;; nXhtml
;(load "~/elisp/nxhtml/autostart")

;; web mode
;(load "~/elisp/web-mode.el")
;(require 'web-mode)
;(add-to-list 'auto-mode-alist '("\\.phtml\\'" . web-mode))
;(add-to-list 'auto-mode-alist '("\\.tpl\\.php\\'" . web-mode))
;(add-to-list 'auto-mode-alist '("\\.jsp\\'" . web-mode))
;(add-to-list 'auto-mode-alist '("\\.as[cp]x\\'" . web-mode))
;(add-to-list 'auto-mode-alist '("\\.erb\\'" . web-mode))
;(add-to-list 'auto-mode-alist '("\\.mustache\\'" . web-mode))
;(add-to-list 'auto-mode-alist '("\\.djhtml\\'" . web-mode))
;(add-to-list 'auto-mode-alist '("\\.php\\'" . php-mode))
;(add-to-list 'auto-mode-alist '("\\.blade\\.php\\'" . web-mode))
;(add-to-list 'auto-mode-alist '("/\\(views\\|html\\|templates\\)/.*\\.php\\'" . web-mode))


;; JAVA configuration
;(add-hook 'java-mode-hook
;	  (lambda ()
;	    "Treat Java 1.5 @-style annotations as comments."
;	    (setq c-comment-start-regexp "(@|/(/|[*][*]?))")
;	    (modify-syntax-entry ?@ "< b" java-mode-syntax-table)))

;(add-hook 'java-mode-hook (lambda ()
;			    (setq c-basic-offset 2)))

(add-hook 'java-mode-hook (lambda ()
			    (setq c-basic-offset 2
				  tab-width 2
				  indent-tabs-mode nil)))

;; backup
(setq backup-by-copying t
      backup-directory-alist
      '(("." . "~/.saves"))
      delete-old-versions t
      kept-new-versions 6
      kept-old-versions 2
      version-control t)

;; ruby mode
(add-to-list 'load-path "~/elisp/ruby-mode")
(add-to-list 'auto-mode-alist
	     '("\\.\\(?:gemspec\\|irbrc\\|gemrc\\|rake\\|rb\\|ru\\|thor\\)\\'" . ruby-mode))
(add-to-list 'auto-mode-alist
	     '("\\(Capfile\\|Gemfile\\(?:\\.[a-zA-Z0-9._-]+\\)?\\|[rR]akefile\\)\\'" . ruby-mode))